plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // id 'kotlin-kapt' // Закомментировано - мигрируем с kapt на ksp
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize' // Добавляем для автоматической реализации Parcelable
}

// Упрощенная настройка для всех задач Kotlin
// Убрали эту секцию, так как KotlinOptions задаются ниже

android {
    namespace 'com.shopapp'
    compileSdk 33
    
    // Отключаем Jetifier и включаем AndroidX
    buildFeatures {
        buildConfig true
    }
    
    // Специальная настройка для тестовой компиляции
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        if (name.contains("Test")) {
            kotlinOptions.jvmTarget = "11"
        }
    }

    defaultConfig {
        applicationId "com.shopapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        // Возвращаемся к Java 8 для совместимости с Android SDK
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        // Полностью отключаем проверку core-library-desugaring для решения проблем с jlink
        coreLibraryDesugaringEnabled false
    }
    
    testOptions {
        // Настройки для Android-тестов
        animationsDisabled true
        execution 'host'
        
        // Минимальная настройка unit-тестов
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            
            // Включаем вывод стандартных потоков для отладки
            all {
                testLogging {
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                    showExceptions true
                    showCauses true
                    showStackTraces true
                    exceptionFormat "full"
                }
                jvmArgs '-XX:+AllowRedefinitionToAddDeleteMethods'
            }
        }
    }
    kotlinOptions {
        // Возвращаем JVM target на 1.8 для совместимости с Android SDK
        jvmTarget = "1.8"
        freeCompilerArgs += [
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xopt-in=androidx.compose.material3.ExperimentalMaterial3Api",
            "-Xjvm-default=all" // Разрешаем дефолтные методы в интерфейсах
        ]
    }

    // Настройки KSP для обработки аннотаций
    ksp {
        arg("ksp.incremental", "true")
    }
    buildFeatures {
        compose true
    }
    
    // Настройки пакетирования для избежания проблем с jlink
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += 'META-INF/LICENSE.md'
            excludes += 'META-INF/LICENSE-notice.md'
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

configurations.all {
    resolutionStrategy {
        // Принудительно использовать версии emoji2, совместимые с compileSdk 33
        force 'androidx.emoji2:emoji2:1.3.0'
        force 'androidx.emoji2:emoji2-views-helper:1.3.0'
    }
}

dependencies {
    // Android Core
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    
    // Material Design для обычных Android-компонентов (XML)
    implementation 'com.google.android.material:material:1.8.0'
    
    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material3:material3:1.1.1"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    
    // Добавляем для отладки
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    
    // Navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"
    
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    ksp "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation 'io.mockk:mockk:1.13.8'
    testImplementation 'app.cash.turbine:turbine:1.0.0' // Для тестирования Flow
    testImplementation 'com.google.truth:truth:1.1.5' // Более удобные assertions
    
    // Тесты для Android-компонентов
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}
